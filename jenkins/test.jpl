#!/usr/bin/env groovy

/*
  Copyright (C) 2018, 2019 Collabora Limited
  Author: Guillaume Tucker <guillaume.tucker@collabora.com>

  This module is free software; you can redistribute it and/or modify it under
  the terms of the GNU Lesser General Public License as published by the Free
  Software Foundation; either version 2.1 of the License, or (at your option)
  any later version.

  This library is distributed in the hope that it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
  details.

  You should have received a copy of the GNU Lesser General Public License
  along with this library; if not, write to the Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
*/

/* ----------------------------------------------------------------------------
 * Jenkins parameters

The following parameters need to be defined in the Jenkins pipeline job, with
typical default values in brackets:

CONFIG_LIST
  List of build configs to check instead of all the ones in build-configs.yaml
KCI_API_URL (https://api.kernelci.org)
  URL of the KernelCI backend API
KCI_TOKEN_ID
  Identifier of the KernelCI backend API token stored in Jenkins
KCI_STORAGE_URL (https://storage.kernelci.org/)
  URL of the KernelCI storage server
KCI_CORE_URL (https://github.com/kernelci/kernelci-core.git)
  URL of the kernelci-core repository
KCI_CORE_BRANCH (master)
  Name of the branch to use in the kernelci-core repository
DOCKER_BASE (kernelci/build-)
  Dockerhub base address used for the build images

*/

@Library('kernelci') _
import org.kernelci.util.Job

def dotest() {
    echo "=======yypp 20000 "
   /*result = sh(script: "/root/hello.sh", returnStatus: true).trim()*/
   result = sh(script: "/root/kernelci-core/kci_build list_configs", returnStatus: true).trim()
    echo "=======yypp 20001 "+result   
   /*sh 'echo hello'*/
   /*
   def exitValue = sh(script: "echo hello ", returnStatus: true)
    echo "return exitValue :${exitValue}"
    if(exitValue != 0){
        echo "=======yypp 20001 "    
    }
    echo "=======yypp 20002 "
    */
}

node() {
    echo "=======yypp 10000 "
    dotest()	
    echo "=======yypp 10001 "
}
